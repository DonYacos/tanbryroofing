<div class="container">
  
  <div class="row">

   



     <div class="col-md-6 estimate">
        <%= form_for @lead, :class => "form-horizontal" do |f| %>

          <div class="col-md-12">

                  

            <div class="col-md-6">
              <div class="form-group">
                <%= f.label "First name" %>
                <%= f.text_field :firstName, :class => "form-control", :placeholder => "Enter first name" %>
              </div>
            </div>

            <div class="col-md-6">
              <div class="form-group">
                <%= f.label "Last name" %>
                <%= f.text_field :lastName, :class => "form-control", :placeholder => "Enter last name" %>
              </div>
            </div>

            <div class="col-md-6">
              <div class="form-group">
                <%= f.label :phone %>
                <%= f.telephone_field :phone, :class => "form-control", :placeholder => "Enter phone number" %>
              </div>
            </div>

            <div class="col-md-12">
              <div class="form-group">
                <%= f.label :email %>
                <%= f.email_field :email, :class => "form-control", :placeholder => "Enter email" %>
              </div>
            </div>

            <div class="col-md-12">
              <div class="form-group">
                <label for="autocomplete">Property Address</label>
                <input id="autocomplete" class="form-control" placeholder="Enter your address" onFocus="geolocate()" type="text"></input>
              </div>
            </div>

            <div class="col-md-4">
              <div class="form-group">
                <%= f.label :streetnumber %>
                <%= f.text_field :streetnumber, :id => "street_number", :class => "form-control", :placeholder => "Number" %>
              </div>
            </div>


            <div class="col-md-8">
              <div class="form-group">
                <%= f.label :street %>
                <%= f.text_field :street, :id => "route", :class => "form-control", :placeholder => "Street" %>
              </div>
            </div>

            <div class="col-md-6">
              <div class="form-group">
                <%= f.label :city %>
                <%= f.text_field :city, :id => "locality", :class => "form-control", :placeholder => "City" %>
              </div>
            </div>

            <div class="col-md-3">
              <div class="form-group">
                <%= f.label :state %>
                <%= f.text_field :state, :id => "administrative_area_level_1", :class => "form-control", :placeholder => "State" %>
              </div>
            </div>

            <div class="col-md-3">
              <div class="form-group">
                <%= f.label :zip %>
                <%= f.text_field :zip, :id => "postal_code", :class => "form-control", :placeholder => "Zip" %>
              </div>
            </div>

            <!-- <div class="form-group">              
              <p class="help-block">Please tell us whether your roof is for a residence or<br>a commercial property.</p>
            </div>

            <div class="col-md-12">
              <div class="checkbox">
                <%#= check_box_tag(:residential, "true") %>
                <%#= label_tag(:residential) %>
              </div>
              <div class="checkbox">
                <%#= check_box_tag(:commercial, "true") %>
                <%#= label_tag(:commercial) %>
              </div>
             </div>  -->

            <div class="col-md-12"> 
              <div class="form-group">
                <%= f.label :comment %>
                <%= f.text_area :comment, :class => "form-control", :placeholder => "Optional additional information" %>
              </div>
            </div>

            <div class="col-md-12">
              <%= f.submit "Get Estimate", :class => "btn btn-default btn-lg" %>
            </div>

          </div> 
        <% end %>
    </div>
  

    <div class="col-md-6">
      <div class="thanks-for-interest">
        <h2><strong>Thank you!</strong></h2>
        <p class="lead">...for your interest in having Bryce Roofing give you an estimate!</p>
      </div>
    </div>

  </div>

<!-- Begin Javascript for Google Places API autocomplete -->
<script>
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

// This example requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:
// <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

var placeSearch, autocomplete;
var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  //country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

// [START region_fillform]
function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
// [END region_geolocation]

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC-rXBN6yKnGIhE8S3BPg8M0oXm5Ga-P5o&signed_in=true&libraries=places&callback=initAutocomplete"
        async defer></script>

</div>

<script type="text/javascript">
  $(document).ready(function () {
    $('.app_header').hide();
  });
</script>



